### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Comment {
  author: User!
  content: String!
  id: Int!
  post: Post!
}

input CommentWhereUniqueInput {
  id: Int
}

type Message {
  message: String
}

type Mutation {
  createPost(content: String!, title: String!): Post
  deletePost(id: Int!): Message
  editPost(content: String!, id: Int!): Post
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, password: String!, username: String!): AuthPayload
}

type Post {
  author: User!
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  content: String!
  id: Int!
  title: String!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  getAllPosts: [Post]
  getPostById(id: Int): Post
  getPostsByUserId(userId: Int): [Post]
  getUser(userId: Int): User
}

type User {
  comments(after: CommentWhereUniqueInput, before: CommentWhereUniqueInput, first: Int, last: Int): [Comment!]!
  id: Int!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  username: String!
}
